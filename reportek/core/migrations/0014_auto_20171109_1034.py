# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-09 10:34
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import reportek.core.models.reports.catalog


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0013_merge_20171108_1234'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('from_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_log_events_from', to='core.WFState')),
                ('to_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_log_events_to', to='core.WFState')),
                ('transition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.WFTransition')),
            ],
            options={
                'verbose_name': 'report log event',
            },
        ),
        migrations.DeleteModel(
            name='ReportOne',
        ),
        migrations.CreateModel(
            name='ReportSimple',
            fields=[
            ],
            options={
                'verbose_name': 'report (simple)',
                'verbose_name_plural': 'reports (simple)',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.basereport', reportek.core.models.reports.catalog.FinishMixin),
        ),
        migrations.CreateModel(
            name='ReportWithQA',
            fields=[
            ],
            options={
                'verbose_name': 'report (with QA)',
                'verbose_name_plural': 'reports (with QA)',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.basereport', reportek.core.models.reports.catalog.SendToQAMixin),
        ),
        migrations.AlterField(
            model_name='basereport',
            name='type',
            field=models.CharField(choices=[('core.reportsimple', 'report (simple)'), ('core.reportwithqa', 'report (with QA)')], db_index=True, max_length=255),
        ),
        migrations.AlterUniqueTogether(
            name='reportlog',
            unique_together=set([('timestamp', 'from_state', 'to_state')]),
        ),
    ]
