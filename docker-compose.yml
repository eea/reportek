version: '2'

services:
  postgres:
    image: postgres:9.6
    env_file:
      - ./docker/postgres.env
    volumes:
      - pg-data:/var/lib/postgresql/data
      - pg-backups:/pg_backups
    labels:
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - ./docker/rabbitmq.env
    labels:
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  redis:
    image: redis:4.0-alpine
    command: "redis-server"
    volumes:
      - redis-data:/data

  tusd:
    image: tusproject/tusd:latest
    env_file:
      - ./docker/demo.env
    entrypoint: ["/go/bin/tusd", "-dir", "/srv/tusd-data", "-hooks-http", "http://app:${REPORTEK_GUNICORN_PORT}/api/${API_VERSION}/uploads/"]
    volumes:
      - tusd-uploads:/srv/tusd-data
    labels:
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  app:
    image: eeacms/reportek2:latest
    env_file:
      - ./docker/demo.env
      - ./docker/postgres.env
      - ./docker/rabbitmq.env
    volumes:
    - static-files:/var/local/reportek/static
    - tusd-uploads:/var/local/tusd_uploads
    - envelope-files:/var/local/protected_uploads
    depends_on:
      - postgres
      - rabbitmq
      - tusd
      - redis
    labels:
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  celery-worker:
    image: eeacms/reportek2:latest
    env_file:
      - ./docker/demo.env
      - ./docker/postgres.env
      - ./docker/rabbitmq.env
    environment:
      - DJANGO_MIGRATE=no
      - DJANGO_LOAD_ROD_FIXTURES=no
    entrypoint: ["./run_celery_worker.sh"]
    volumes:
    - tusd-uploads:/var/local/tusd_uploads
    - envelope-files:/var/local/protected_uploads
    depends_on:
      - app
    labels:
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  celery-beat:
    image: eeacms/reportek2:latest
    env_file:
      - ./docker/demo.env
      - ./docker/postgres.env
      - ./docker/rabbitmq.env
    environment:
      - DJANGO_MIGRATE=no
      - DJANGO_LOAD_ROD_FIXTURES=no
    entrypoint: ["./run_celery_beat.sh"]
    volumes:
    - tusd-uploads:/var/local/tusd_uploads
    - envelope-files:/var/local/protected_uploads
    depends_on:
      - celery-worker
    labels:
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  nginx:
    image: nginx:latest
    environment:
      NGINX_CONF: |-
        upstream app {
          ip_hash;
          server app:${REPORTEK_GUNICORN_PORT};
        }
        server {
          listen 80;
          server_name ${REPORTEK_DOMAIN};

          access_log /var/log/nginx/access.log main;
          location / {
            proxy_pass http://app/;
          }
          location /static {
            sendfile on;
            tcp_nopush on;
            gzip on;
            gzip_types text/plain application/x-javascript text/css;
            expires 1d;
            root /var/local/reportek;
          }
        }
        upstream tusd {
          ip_hash;
          server tusd:${TUSD_PORT};
        }
        server {
          listen 8080;
          server_name ${REPORTEK_DOMAIN};

          location / {
            proxy_pass http://tusd/;
          }

          access_log /var/log/nginx/access-tusd.log main;

          proxy_request_buffering  off;
          proxy_buffering          off;
          proxy_http_version       1.1;

          client_max_body_size     0;
        }
    command: /bin/sh -c 'echo "$$NGINX_CONF" > /etc/nginx/conf.d/default.conf && exec nginx -g "daemon off;"'
    volumes:
    - static-files:/var/local/reportek/static:ro
    depends_on:
      - app
    labels:
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

volumes:
  pg-data:
    driver: rancher-nfs
  pg-backups:
    driver: rancher-nfs
  tusd-uploads:
    driver: rancher-nfs
  static-files:
    driver: rancher-nfs
  envelope-files:
    driver: rancher-nfs
  redis-data:
    driver: rancher-nfs
